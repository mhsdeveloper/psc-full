server {
	listen 80 default_server;

	# ---------------------------------------------------------------------------
	# IF YOU'RE USING SSL, REPLACE ABOVE THIS LINE WITH YOUR MODIFIED SSL CONFIG, 
	# see install/ssl-in-nginx.md
	# the configuration below is the same whether or not you use SSL




	# EDIT HERE: Change each occurance of "mydomain.org" to your domain name.
	server_name  DOMAINNAMEORG www.DOMAINNAMEORG;


    root         /psc/www/html;

    default_type text/xml;
    client_max_body_size 40M;

    access_log   /var/log/nginx/access.log;
    error_log    /var/log/nginx/error.log;

    # first, for ALL REQUESTS, we try the request as file ($uri),
    # then as a directory ($uri/), and then failing that we send it
    # to the wordpress bootloader, index.php
    # NGINX: because "location /" matches everything, this directive
    # is used as a last resort match, if there are no more specific matches

    location / {
       # kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
        index index.php;
        try_files $uri $uri/ /index.php?$args;
    }


    # Add trailing slash to */wp-admin requests.
    rewrite /wp-admin$ $scheme://$host$uri/ permanent;

    # Directives to send expires headers and turn off 404 error logging.
    # the ~* is a modifier, and means the next arg is a regex match
    # the * itself make the regex case-insensitive
    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires 24h;
        log_not_found off;
    }

    # this prevents hidden files (beginning with a period) from being served
    location ~ /\.          { access_log off; log_not_found off; deny all; }

    # Pass uploaded files to wp-includes/ms-files.php.
    #rewrite /files/$ /wordpress/index.php last;

    if ($uri !~ wp-content/plugins) {
        rewrite /files/(.+)$ /wp-includes/ms-files.php?file=$1 last;
    }

    # Rewrite multisite '.../wp-.*' and '.../*.php'.
    if (!-e $request_filename) {
	#bypass wordpress for all URLs beginning with /publications/
	rewrite ^(/publications/)([_0-9a-zA-Z-/]+) /publications/index.php?$1 last;

#	rewrite ^(/wp-.*) /wordpress/$1 last;
        rewrite ^/[_0-9a-zA-Z-]+(/wp-.*) /$1 last;
        rewrite ^/[_0-9a-zA-Z-]+.*(/wp-admin/.*\.php)$ /$1 last;
        rewrite ^/[_0-9a-zA-Z-]+(/.*\.php)$ /$1 last;
    }

    if (!-f $request_filename) {
        rewrite ^(/tools/)([_0-9a-zA-Z-/]+) /tools/index.php?$1 last;
    }

    location ~ \.php$ {
        client_max_body_size 100M;
        try_files      $uri =404;
        fastcgi_index  index.php;
        fastcgi_pass unix:/run/php/phpPHPVERSION-fpm.sock;
        include         fastcgi_params;
        fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
        fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;
    }


    location /mhs-api {
		alias /psc/www/html/mhs-api/public;
		try_files $uri $uri/ @laravel;

		location ~ \.php {
			fastcgi_pass unix:/var/run/php/phpPHPVERSION-fpm.sock;
			fastcgi_split_path_info ^(.+\.php)(.*)$;
			include fastcgi_params;
			fastcgi_param SCRIPT_FILENAME /psc/www/html/mhs-api/public/index.php;
		}
    }

   location @laravel {
        rewrite /mhs-api/(.*)$ /mhs-api/index.php?/$1 last;
   }

   location /mhs-api/ext {
	 try_files $uri $uri/ /mhs-api/u1/ext.php$is_args$args;
   }

   location /mhs-api/u1 {
	 try_files $uri $uri/ /mhs-api/u1/index.php$is_args$args;
   }

   location /docmanager {
	try_files $uri $uri/ /docmanager/index.php$is_args$args;
   }

   location /subjectsmanager {
	try_files $uri $uri/ /subjectsmanager/index.php$is_args$args;
   }

   location /supportfiles {
	try_files $uri $uri/ /supportfiles/index.php$is_args$args;
   }

   location /tools/wetvac {
        try_files $uri $uri/ /index.php?$args;
   }

}	
